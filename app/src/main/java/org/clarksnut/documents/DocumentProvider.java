package org.clarksnut.documents;

import org.clarksnut.documents.exceptions.PreexistedDocumentException;
import org.clarksnut.documents.exceptions.UnreadableDocumentException;
import org.clarksnut.documents.exceptions.UnsupportedDocumentTypeException;
import org.clarksnut.files.XmlUBLFileModel;

import java.util.List;

public interface DocumentProvider {

    /**
     * @param file that contains xml file to be persisted
     */
    DocumentModel addDocument(XmlUBLFileModel file, DocumentProviderType providerType)
            throws UnsupportedDocumentTypeException, UnreadableDocumentException, PreexistedDocumentException;

    /**
     * @param id unique identity generated by the system
     * @return document
     */
    DocumentModel getDocument(String id);

    /**
     * @param type               document type
     * @param assignedId         document assigned id
     * @param supplierAssignedId supplier assigned id
     * @return document
     */
    DocumentModel getDocument(String type, String assignedId, String supplierAssignedId);

    /**
     * @param document document to be removed
     * @return true if document was removed
     */
    boolean removeDocument(DocumentModel document);

    /**
     * @return list of documents
     */
    List<DocumentModel> getDocuments(DocumentQueryModel query);

    /**
     * @return count results
     */
    int getDocumentsSize(DocumentQueryModel query);

}
